/**
 * Test File: tests/automated-keyword-factory.spec.ts
 * Purpose: Validate automated keyword factory content integration
 * Context: Ensures generated marketing pages follow design system and conversion patterns
 * RELEVANT FILES: keyword-factory-automation.js, MARKETING_DESIGN_SYSTEM.md, globals.css
 */

import { test, expect } from '@playwright/test';

test.describe('Automated Keyword Factory Integration', () => {
  test.beforeEach(async ({ page }) => {
    // Navigate to auto-generated page
    await page.goto('/ai-powered-product-management-2024');
  });

  test('Generated page follows marketing design system', async ({ page }) => {
    // Verify page loads successfully
    await expect(page).toHaveTitle(/PM33/);
    
    // Check marketing context styling is applied
    const marketingContext = page.locator('.marketing-context');
    await expect(marketingContext).toBeVisible();
    
    // Verify headline follows marketing content pattern
    const headline = page.locator('h1');
    await expect(headline).toContainText('AI-powered product management 2024');
    await expect(headline).toContainText('Supercharges Your Existing Stack');
    
    // Check subtitle messaging consistency
    const subtitle = page.locator('text=Don\'t replace your PM tools - make them 10x smarter');
    await expect(subtitle).toBeVisible();
    
    // Verify CTA buttons are visible
    const trialButton = page.locator('text=Start Free 14-Day Trial');
    await expect(trialButton).toBeVisible();
    
    const demoButton = page.locator('text=See Live Demo');
    await expect(demoButton).toBeVisible();
  });

  test('Generated content includes proper meta data and SEO optimization', async ({ page }) => {
    // Check page title optimization
    const title = await page.title();
    expect(title).toContain('PM33');
    
    // Verify structured marketing layout
    const container = page.locator('[class*="mantine-Container"]');
    await expect(container).toBeVisible();
    
    // Check generation metadata comments are present
    const pageSource = await page.content();
    expect(pageSource).toContain('Generated by PM33 Keyword Factory');
    expect(pageSource).toContain('Target keyword: AI-powered product management 2024');
    expect(pageSource).toMatch(/Generated: \d{4}-\d{2}-\d{2}/);
  });

  test('Auto-generated page integrates with existing navigation', async ({ page }) => {
    // Check CTAs link to existing pages
    const trialLink = page.locator('a[href="/trial"]');
    await expect(trialLink).toBeVisible();
    
    const demoLink = page.locator('a[href="/strategic-intelligence"]');
    await expect(demoLink).toBeVisible();
  });

  test('Generated content follows Mantine UI component patterns', async ({ page }) => {
    // Verify Mantine Container usage
    const container = page.locator('.mantine-Container-root');
    await expect(container).toBeVisible();
    
    // Verify Card component styling
    const card = page.locator('.mantine-Card-root');
    await expect(card).toBeVisible();
    
    // Check Title component formatting
    const title = page.locator('.mantine-Title-root');
    await expect(title).toBeVisible();
  });

  test('Generated content uses marketing color system correctly', async ({ page }) => {
    // Verify marketing context class is applied
    await expect(page.locator('.marketing-context')).toBeVisible();
    
    // Check that marketing CSS variables are available
    const rootStyles = await page.evaluate(() => {
      const root = document.documentElement;
      return {
        marketingPrimary: getComputedStyle(root).getPropertyValue('--marketing-primary'),
        marketingCta: getComputedStyle(root).getPropertyValue('--marketing-cta'),
        marketingTextPrimary: getComputedStyle(root).getPropertyValue('--marketing-text-primary')
      };
    });
    
    expect(rootStyles.marketingPrimary.trim()).toBe('#1E40AF');
    expect(rootStyles.marketingCta.trim()).toBe('#EA580C');
    expect(rootStyles.marketingTextPrimary.trim()).toBe('#1E293B');
  });

  test('Generated page loads quickly and maintains stability', async ({ page }) => {
    // Verify page loads quickly
    const startTime = Date.now();
    await page.locator('h1').waitFor({ state: 'visible' });
    const loadTime = Date.now() - startTime;
    
    expect(loadTime).toBeLessThan(3000); // Under 3 seconds
    
    // Verify all essential elements are visible
    await expect(page.locator('h1')).toBeVisible();
    await expect(page.locator('text=Start Free 14-Day Trial')).toBeVisible();
    await expect(page.locator('text=See Live Demo')).toBeVisible();
  });

  test('Generated content scales across mobile/tablet/desktop', async ({ page }) => {
    // Test desktop view (default)
    await expect(page.locator('h1')).toBeVisible();
    
    // Test tablet view
    await page.setViewportSize({ width: 768, height: 1024 });
    await expect(page.locator('h1')).toBeVisible();
    await expect(page.locator('.mantine-Container-root')).toBeVisible();
    
    // Test mobile view
    await page.setViewportSize({ width: 375, height: 667 });
    await expect(page.locator('h1')).toBeVisible();
    
    // Verify buttons remain accessible on mobile
    const buttonsContainer = page.locator('[style*="display: flex"]');
    await expect(buttonsContainer).toBeVisible();
  });

  test('Generated content maintains brand consistency', async ({ page }) => {
    // Verify core value proposition messaging
    await expect(page.locator('text=Don\'t replace your PM tools - make them 10x smarter')).toBeVisible();
    
    // Check consistent CTA messaging
    await expect(page.locator('text=Start Free 14-Day Trial')).toBeVisible();
    await expect(page.locator('text=See Live Demo')).toBeVisible();
    
    // Verify links point to correct destinations
    const trialLink = page.locator('a[href="/trial"]');
    const demoLink = page.locator('a[href="/strategic-intelligence"]');
    
    await expect(trialLink).toBeVisible();
    await expect(demoLink).toBeVisible();
  });
});